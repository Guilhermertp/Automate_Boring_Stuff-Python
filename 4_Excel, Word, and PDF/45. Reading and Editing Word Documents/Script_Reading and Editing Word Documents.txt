#install first the module
#pip install python-docx

import docx

#create document object
d = docx.Document('C:\\Users\\guilh\\Udemy courses\\1_Automate-Boring-Python\\4_Excel, Word, and PDF\\45. Reading and Editing Word Documents\\demo.docx')

#list of the paragraphs objects
d.paragraphs

#see the text inside the paragraph object, returns a string
d.paragraphs[0].text

#next the run is each type of the text, by ex. if text starts in bold and then changes and changes again we have 3 runs
#that can be called by the index

#the second paragraph have 3 runs, 'A plain paragraph having some bold and some italic.'

p = d.paragraphs[1]

p.runs #shows the 3 run objects

#get the run object by index
p.runs[0].text
p.runs[1].text
p.runs[2].text

#test the bold and italic method that if is in the text is set to True if not False

p.runs[2].bold #should return True

p.runs[3].italic #should return True

#change the text in the second paragraph to underline and add some text
p.runs[3].bold = True
p.runs[3].text = 'italic and bold'

#saves the changes
d.save('C:\\Users\\guilh\\Udemy courses\\1_Automate-Boring-Python\\4_Excel, Word, and PDF\\45. Reading and Editing Word Documents\\demo_edited.docx')

#check and change the style of a whole paragraph
p.style # in this case will return the style of the 3rd paragraph
p.style = 'Title' #changes the style to 'Title' style

#saves the changes
d.save('C:\\Users\\guilh\\Udemy courses\\1_Automate-Boring-Python\\4_Excel, Word, and PDF\\45. Reading and Editing Word Documents\\demo_edited2.docx')

**************New section*****************************

#create a blank new word Document that only exists in the python program and not in the harddrive
d = docx.Document()

#creates a paragraph
d.add_paragraph('Hello this is a paragraph.')
d.add_paragraph('This is another paragraph.')

#save to a new doc
d.save('C:\\Users\\guilh\\Udemy courses\\1_Automate-Boring-Python\\4_Excel, Word, and PDF\\45. Reading and Editing Word Documents\\demo_edited3.docx')

# find the first paragraph object from the paragraphs list in the document object
p = d.paragraphs[0]

#like document objects have an add paragraph method, paragraoh objects have an add run method
#add a new run 
p.add_run('This is a new run.')

p.runs #with is going to show the runs objects inside the paragraph object, in this case 2 run objects

#pick the secon run at index 1 and set the bold to True
p.runs[1].bold = True


d.save('C:\\Users\\guilh\\Udemy courses\\1_Automate-Boring-Python\\4_Excel, Word, and PDF\\45. Reading and Editing Word Documents\\demo_edited4.docx')

#this new doc created above shows us that unfortunately there's no way of inserting paragraph and run objects anywhere except at the end.
#Maybe in a future version of Python docx we will be able to insert in other points, but for now is not possible.

***********The only way to solve the problem presented above***************

#So if you want to modify an existing word document. Well you will have to open
the existing word doc. And also create a new document by calling:
docx.Document()
# and coppy to new documents with add paragraph and run and do the changes while copying

*************Get all the text inside of a Word Document as a string***************
import docx

def getText(filename):
 doc = docx.Document(filename)
 fullText = []
 for para in doc.paragraphs:
  fullText.append(para.text)
  return '\n'.join(fullText) #form the single string with all the text from the paragraphs

print(getText('C:\\Users\\guilh\\Udemy courses\\1_Automate-Boring-Python\\4_Excel, Word, and PDF\\45. Reading and Editing Word Documents\\demo.docx'))
